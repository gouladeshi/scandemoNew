name: Build RAUC for ARM and Deploy

on:
  push:
    branches: [ main, master ]
  pull_request:
  workflow_dispatch:

jobs:
  build-rauc:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build RAUC using Docker
        run: |
          # 使用 Docker 构建 RAUC
          docker run --rm -v $(pwd):/output ubuntu:20.04 bash -c "
            apt update && \
            apt install -y gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf build-essential cmake pkg-config libssl-dev libglib2.0-dev libjson-glib-dev libcurl4-openssl-dev git wget && \
            cd /tmp && \
            git clone --depth 1 https://github.com/rauc/rauc.git && \
            cd rauc && \
            echo '源码目录内容:' && \
            ls -la && \
            echo '检查 CMakeLists.txt:' && \
            ls -la CMakeLists.txt && \
            mkdir build && cd build && \
            export CC=arm-linux-gnueabihf-gcc && \
            export CXX=arm-linux-gnueabihf-g++ && \
            cmake .. -DCMAKE_SYSTEM_NAME=Linux -DCMAKE_SYSTEM_PROCESSOR=arm -DCMAKE_C_COMPILER=arm-linux-gnueabihf-gcc -DCMAKE_CXX_COMPILER=arm-linux-gnueabihf-g++ && \
            make -j4 && \
            echo '编译完成，检查结果:' && \
            file src/rauc && \
            mkdir -p /output/rauc-deploy/usr/local/bin /output/rauc-deploy/etc/rauc && \
            cp src/rauc /output/rauc-deploy/usr/local/bin/ && \
            openssl genrsa -out /output/rauc-deploy/etc/rauc/rauc.key 2048 && \
            openssl req -new -x509 -key /output/rauc-deploy/etc/rauc/rauc.key -out /output/rauc-deploy/etc/rauc/rauc.cert -days 365 -subj '/CN=STM32MP-OTA-Cert' && \
            cat > /output/rauc-deploy/etc/rauc/system.conf << 'EOF'
          [system]
          compatible=STM32MP1,ScanDemo
          bootloader=u-boot
          
          [slot.rootfs.0]
          device=/dev/mmcblk0p2
          type=ext4
          bootname=A
          
          [slot.rootfs.1]
          device=/dev/mmcblk0p3
          type=ext4
          bootname=B
          EOF
          "

      - name: Create installation script
        run: |
          cat > rauc-deploy/install.sh << 'EOF'
          #!/bin/bash
          echo "=== 安装 RAUC (ARM 版本) ==="
          
          # 复制二进制文件
          cp usr/local/bin/rauc /usr/local/bin/
          chmod +x /usr/local/bin/rauc
          
          # 创建配置目录
          mkdir -p /etc/rauc
          
          # 复制配置文件
          cp etc/rauc/* /etc/rauc/
          chmod 644 /etc/rauc/rauc.cert
          chmod 600 /etc/rauc/rauc.key
          chmod 644 /etc/rauc/system.conf
          
          # 验证安装
          echo "验证安装..."
          /usr/local/bin/rauc --version
          /usr/local/bin/rauc status
          
          echo "✓ RAUC (ARM 版本) 安装完成"
          EOF
          
          chmod +x rauc-deploy/install.sh
          
          # 验证 ARM 版本
          echo "验证 ARM 版本:"
          file rauc-deploy/usr/local/bin/rauc
          
          # 打包
          tar -czf rauc-deploy.tar.gz rauc-deploy/

      - name: Upload RAUC deployment package
        uses: actions/upload-artifact@v4
        with:
          name: rauc-deploy-arm
          path: |
            rauc-deploy.tar.gz
            rauc-deploy/
          retention-days: 30
